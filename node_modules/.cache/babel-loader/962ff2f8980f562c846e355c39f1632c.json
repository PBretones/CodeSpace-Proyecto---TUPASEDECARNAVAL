{"ast":null,"code":"var _jsxFileName = \"/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n\n  // we use Ref\n  const audioRef = useRef(null); //State\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null\n  }); //Event Handlers\n\n  const playSongHandler = () => {\n    audioRef.current.play();\n\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      cduration: duration\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeControl\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playControl\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"3x\",\n        icon: faPlayCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"p61rdD1bnUqEO8WwgTedH36g77I=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlayCircle","faAngleLeft","faAngleRight","Player","currentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","currentTime","duration","playSongHandler","current","play","pause","timeUpdateHandler","e","target","cduration","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,YAApC,QAAwD,mCAAxD;;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAAD,KAA8C;AAAA;;AAEhE;AACA,QAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB,CAHgE,CAIhE;;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACrCY,IAAAA,WAAW,EAAE,IADwB;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAxC,CALgE,CAUhE;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC1BL,IAAAA,QAAQ,CAACM,OAAT,CAAiBC,IAAjB;;AACA,QAAIT,SAAJ,EAAe;AACXE,MAAAA,QAAQ,CAACM,OAAT,CAAiBE,KAAjB;AACAT,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,KAHD,MAGO;AACHE,MAAAA,QAAQ,CAACM,OAAT,CAAiBC,IAAjB;AACAR,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;AACJ,GATD;;AAWA,QAAMW,iBAAiB,GAAIC,CAAD,IAAO;AAE7B,UAAMJ,OAAO,GAAGI,CAAC,CAACC,MAAF,CAASR,WAAzB;AACA,UAAMC,QAAQ,GAAGM,CAAC,CAACC,MAAF,CAASP,QAA1B;AAEAF,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,WAAW,EAAEG,OAA5B;AAAqCM,MAAAA,SAAS,EAAER;AAAhD,KAAD,CAAX;AACH,GAND;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAuC,QAAA,IAAI,EAAC,IAA5C;AAAiD,QAAA,IAAI,EAAEV;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEW,eAA1B;AAA2C,QAAA,SAAS,EAAC,MAArD;AAA4D,QAAA,IAAI,EAAC,IAAjE;AAAsE,QAAA,IAAI,EAAEZ;AAA5E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,cAA3B;AAA0C,QAAA,IAAI,EAAC,IAA/C;AAAoD,QAAA,IAAI,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAYI;AAAO,MAAA,YAAY,EAAEc,iBAArB;AAAwC,MAAA,GAAG,EAAET,QAA7C;AAAuD,MAAA,GAAG,EAAEH,WAAW,CAACgB;AAAxE;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAhDM;;GAAMjB,M;;KAAAA,M","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nexport const Player = ({ currentSong, isPlaying, setIsPlaying }) => {\n\n    // we use Ref\n    const audioRef = useRef(null);\n    //State\n    const [songInfo, setSongInfo] = useState({\n        currentTime: null,\n        duration: null,\n    });\n\n    //Event Handlers\n    const playSongHandler = () => {\n        audioRef.current.play();\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    }\n\n    const timeUpdateHandler = (e) => {\n\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n\n        setSongInfo({ ...songInfo, currentTime: current, cduration: duration })\n    }\n\n\n\n    return (\n        <div className=\"player\">\n            <div className=\"timeControl\">\n                <p>Start Time</p>\n                <input type=\"range\" />\n                <p>End Time</p>\n            </div>\n            <div className=\"playControl\">\n                <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"3x\" icon={faPlayCircle} />\n                <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n            </div>\n\n            <audio onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}