{"ast":null,"code":"var _jsxFileName = \"/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/Player.js\";\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faAngleLeft, faAngleRight, faStopCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Player = ({\n  audioRef,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo\n}) => {\n  // Format Time\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }; //Event Handlers\n\n\n  const playSongHandler = () => {\n    audioRef.current.play();\n\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = flow => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeControl\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: dragHandler,\n        min: 0,\n        max: songInfo.duration,\n        value: songInfo.currentTime,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration || 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playControl\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"3x\",\n        icon: isPlaying ? faStopCircle : faPlayCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/Player.js"],"names":["React","useState","FontAwesomeIcon","faPlayCircle","faAngleLeft","faAngleRight","faStopCircle","Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","getTime","time","Math","floor","slice","playSongHandler","current","play","pause","dragHandler","e","currentTime","target","value","skipTrackHandler","flow","duration"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faAngleLeft, faAngleRight, faStopCircle } from '@fortawesome/free-solid-svg-icons';\n\nexport const Player = ({ audioRef, currentSong, isPlaying, setIsPlaying, setSongInfo, songInfo }) => {\n\n\n    // Format Time\n\n    const getTime = (time) => {\n        return (\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        )\n    }\n\n\n    //Event Handlers\n    const playSongHandler = () => {\n        audioRef.current.play();\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    }\n\n\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\n    }\n\n\n    const skipTrackHandler = (flow) => {\n\n\n    }\n\n    return (\n        <div className=\"player\">\n            <div className=\"timeControl\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input onChange={dragHandler} min={0} max={songInfo.duration} value={songInfo.currentTime} type=\"range\" />\n                <p>{getTime(songInfo.duration || 0)}</p>\n            </div>\n            <div className=\"playControl\">\n                <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"3x\" icon={isPlaying ? faStopCircle : faPlayCircle} />\n                <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n            </div>\n\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}