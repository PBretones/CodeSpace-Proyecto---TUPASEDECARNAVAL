{"ast":null,"code":"var _jsxFileName = \"/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/Player.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faAngleLeft, faAngleRight, faPauseCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Player = ({\n  audioRef,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  setSongs\n}) => {\n  // Format Time\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }; //Event Handlers\n\n\n  const activeLibraryHandler = nextOrPrevious => {\n    const newSongs = songs.map(song => {\n      if (song._id === nextOrPrevious._id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  const playSongHandler = () => {\n    audioRef.current.play();\n\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = async flow => {\n    let currentIndex = songs.findIndex(song => song._id === currentSong._id);\n\n    if (flow === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]); // We avoid using useEffect putting it here\n    }\n\n    if (flow === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]); // We avoid using useEffect putting it here\n\n        if (isPlaying) {\n          audioRef.current.play();\n        }\n\n        return;\n      }\n\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]); // We avoid using useEffect putting it here\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  const trackAnimation = {\n    transform: `translateX(${songInfo.animationPercentage}%)`\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeControl\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: getTime(songInfo.currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoToggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: dragHandler,\n            min: 0,\n            max: songInfo.duration,\n            value: songInfo.currentTime,\n            type: \"range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: trackAnimation,\n            className: \"animateTrack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: songInfo.duration ? getTime(songInfo.duration) : \"0:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playControl\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: () => skipTrackHandler('skip-back'),\n          className: \"button skip-back\",\n          size: \"2x\",\n          icon: faAngleLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: playSongHandler,\n          className: \"play button\",\n          size: \"3x\",\n          icon: isPlaying ? faPauseCircle : faPlayCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: () => skipTrackHandler('skip-forward'),\n          className: \"button skip-forward\",\n          size: \"2x\",\n          icon: faAngleRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n/* */\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/Player.js"],"names":["React","FontAwesomeIcon","faPlayCircle","faAngleLeft","faAngleRight","faPauseCircle","Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","getTime","time","Math","floor","slice","activeLibraryHandler","nextOrPrevious","newSongs","map","song","_id","active","playSongHandler","current","play","pause","dragHandler","e","currentTime","target","value","skipTrackHandler","flow","currentIndex","findIndex","length","trackAnimation","transform","animationPercentage","duration"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faAngleLeft, faAngleRight, faPauseCircle } from '@fortawesome/free-solid-svg-icons';\n\n\nexport const Player = ({\n    audioRef, currentSong, isPlaying, setIsPlaying,\n    setSongInfo, songInfo, songs, setCurrentSong, setSongs }) => {\n\n\n    // Format Time\n\n    const getTime = (time) => {\n        return (\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        )\n    }\n\n    //Event Handlers\n    const activeLibraryHandler = (nextOrPrevious) => {\n        const newSongs = songs.map((song) => {\n            if (song._id === nextOrPrevious._id) {\n\n                return {\n                    ...song,\n                    active: true,\n                }\n            } else {\n                return {\n                    ...song,\n                    active: false\n                };\n            }\n\n        });\n\n        setSongs(newSongs);\n    }\n\n    const playSongHandler = () => {\n        audioRef.current.play();\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    }\n\n\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\n    }\n\n\n    const skipTrackHandler = async (flow) => {\n\n        let currentIndex = songs.findIndex((song) => song._id === currentSong._id);\n        if (flow === 'skip-forward') {\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]); // We avoid using useEffect putting it here\n        }\n        if (flow === 'skip-back') {\n            if ((currentIndex - 1) % songs.length === -1) {\n                await setCurrentSong(songs[songs.length - 1]);\n                activeLibraryHandler(songs[songs.length - 1]); // We avoid using useEffect putting it here\n                if (isPlaying) { audioRef.current.play() }\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]); // We avoid using useEffect putting it here\n        }\n        if (isPlaying) { audioRef.current.play() }\n    };\n\n    const trackAnimation = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n\n    return (\n        <>\n            <div className=\"player\">\n\n                <div className=\"timeControl\">\n                    <p>{getTime(songInfo.currentTime)}</p>\n                    <div className=\"infoToggle\">\n                        <input onChange={dragHandler} min={0} max={songInfo.duration} value={songInfo.currentTime} type=\"range\" />\n                        <div style={trackAnimation} className=\"animateTrack\"></div>\n                    </div>\n                    <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n                </div>\n\n                <div className=\"playControl\">\n                    <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"button skip-back\" size=\"2x\" icon={faAngleLeft} />\n                    <FontAwesomeIcon onClick={playSongHandler} className=\"play button\" size=\"3x\" icon={isPlaying ? faPauseCircle : faPlayCircle} />\n                    <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"button skip-forward\" size=\"2x\" icon={faAngleRight} />\n                </div>\n            </div >\n        </>\n    );\n}\n\n/* */"]},"metadata":{},"sourceType":"module"}