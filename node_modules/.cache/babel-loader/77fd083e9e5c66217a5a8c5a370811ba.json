{"ast":null,"code":"var _jsxFileName = \"/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/Categories/Audio.js\",\n    _s = $RefreshSig$();\n\nimport { addAudio, RedeleteAudio, getAudios } from '../../helpers';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Audio = ({\n  audio,\n  customPase\n}) => {\n  _s();\n\n  const [checkAudio, setCheckAudio] = useState(true);\n  const history = useHistory();\n\n  const ReaddAudio = audio => {\n    if (typeof window !== \"undefined\") {\n      customPase.push({ ...audio\n      });\n      customPase = Array.from(new Set(customPase.map(p => p._id))).map(id => {\n        return customPase.find(p => p._id === id);\n      });\n    }\n  };\n\n  const RedeleteAudio = audiosId => {\n    customPase.map((audio, index) => {\n      if (audio._id === audiosId) {\n        customPase.splice(index, 1);\n      }\n    });\n    return customPase;\n  };\n\n  const editArray = () => {\n    if (checkAudio === false) {\n      RedeleteAudio(audio._id);\n      setCheckAudio(true);\n    } else {\n      ReaddAudio(audio);\n      setCheckAudio(false);\n    }\n\n    console.log(customPase);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-checkbox\",\n    onChange: editArray,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"custom-checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: audio.mp3,\n        type: \"hidden\",\n        name: audio.name,\n        value: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"custom-checkbox-input\",\n        name: audio.name,\n        value: \"True\",\n        type: \"checkbox\"\n      }, audio._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"custom-checkbox-text\",\n        children: audio.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Audio, \"e8IiM3lqAd/ChAnAqp6AcpWa0H4=\", true);\n\n_c = Audio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/Categories/Audio.js"],"names":["addAudio","RedeleteAudio","getAudios","React","useState","Audio","audio","customPase","checkAudio","setCheckAudio","history","useHistory","ReaddAudio","window","push","Array","from","Set","map","p","_id","id","find","audiosId","index","splice","editArray","console","log","mp3","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,SAAlC,QAAmD,eAAnD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA2B;AAAA;;AAE5C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAMM,OAAO,GAAGC,UAAU,EAA1B;;AACA,QAAMC,UAAU,GAAIN,KAAD,IAAW;AAE1B,QAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;AAE/BN,MAAAA,UAAU,CAACO,IAAX,CAAgB,EACZ,GAAGR;AADS,OAAhB;AAKAC,MAAAA,UAAU,GAAGQ,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQV,UAAU,CAACW,GAAX,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAxB,CAAR,CAAX,EAAkDF,GAAlD,CAAuDG,EAAD,IAAQ;AACvE,eAAOd,UAAU,CAACe,IAAX,CAAiBH,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUC,EAAjC,CAAP;AACH,OAFY,CAAb;AAKH;AACJ,GAfD;;AAkBA,QAAMpB,aAAa,GAAIsB,QAAD,IAAc;AAEhChB,IAAAA,UAAU,CAACW,GAAX,CAAe,CAACZ,KAAD,EAAQkB,KAAR,KAAkB;AAC7B,UAAIlB,KAAK,CAACc,GAAN,KAAcG,QAAlB,EAA4B;AACxBhB,QAAAA,UAAU,CAACkB,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;AACH;AACJ,KAJD;AAMA,WAAOjB,UAAP;AACH,GATD;;AAcA,QAAMmB,SAAS,GAAG,MAAM;AACpB,QAAIlB,UAAU,KAAK,KAAnB,EAA0B;AACtBP,MAAAA,aAAa,CAACK,KAAK,CAACc,GAAP,CAAb;AACAX,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAHD,MAIK;AACDG,MAAAA,UAAU,CAACN,KAAD,CAAV;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH;;AACDkB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,UAAZ;AACH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,QAAQ,EAAEmB,SAA3C;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEpB,KAAK,CAACuB,GAApB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,IAAI,EAAEvB,KAAK,CAACwB,IAAnD;AAAyD,QAAA,KAAK,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAuB,QAAA,KAAK,EAAC,uBAA7B;AAAqD,QAAA,IAAI,EAAExB,KAAK,CAACwB,IAAjE;AAAuE,QAAA,KAAK,EAAC,MAA7E;AAAoF,QAAA,IAAI,EAAC;AAAzF,SAAYxB,KAAK,CAACc,GAAlB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA,kBAAsCd,KAAK,CAACwB;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1DM;;GAAMzB,K;;KAAAA,K","sourcesContent":["import { addAudio, RedeleteAudio, getAudios } from '../../helpers';\nimport React, { useState } from 'react';\n\n\nexport const Audio = ({ audio, customPase }) => {\n\n    const [checkAudio, setCheckAudio] = useState(true);\n    const history = useHistory();\n    const ReaddAudio = (audio) => {\n\n        if (typeof window !== \"undefined\") {\n\n            customPase.push({\n                ...audio\n\n            })\n\n            customPase = Array.from(new Set(customPase.map((p) => p._id))).map((id) => {\n                return customPase.find((p) => p._id === id);\n            });\n\n\n        }\n    };\n\n\n    const RedeleteAudio = (audiosId) => {\n\n        customPase.map((audio, index) => {\n            if (audio._id === audiosId) {\n                customPase.splice(index, 1);\n            }\n        });\n\n        return customPase;\n    }\n\n\n\n\n    const editArray = () => {\n        if (checkAudio === false) {\n            RedeleteAudio(audio._id);\n            setCheckAudio(true);\n        }\n        else {\n            ReaddAudio(audio);\n            setCheckAudio(false);\n        }\n        console.log(customPase);\n    }\n\n    return (\n        <div className=\"custom-checkbox\" onChange={editArray}>\n            <label className=\"custom-checkbox\">\n                <input value={audio.mp3} type=\"hidden\" name={audio.name} value=\"False\" />\n                <input key={audio._id} class=\"custom-checkbox-input\" name={audio.name} value=\"True\" type=\"checkbox\" />\n                <h3 className=\"custom-checkbox-text\">{audio.name}</h3>\n            </label>\n        </div>\n    )\n\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}