{"ast":null,"code":"var _jsxFileName = \"/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/User/UserLogin.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { authentication, myLogin, isAuth } from '../../helpers';\nimport { useHistory } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserLogin = () => {\n  _s();\n\n  const [register, setRegister] = useState(true);\n  const [login, setLogin] = useState(true);\n  const {\n    user\n  } = isAuth();\n\n  const notify = error => toast(error);\n\n  const registerHandler = () => {\n    setRegister(!register);\n  };\n\n  const loginHandler = () => {\n    setLogin(false);\n  };\n\n  const [loginOK, setLoginOK] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\"\n  });\n  const history = useHistory();\n  console.log(user);\n\n  const handleInputs = name => event => {\n    setLoginOK({ ...loginOK,\n      error: false,\n      [name]: event.target.value\n    });\n  };\n\n  const loginSubmit = event => {\n    event.preventDefault();\n    myLogin(loginOK).then(data => {\n      if (data.error) {\n        setLoginOK({ ...loginOK,\n          error: data.error\n        });\n        notify(data.error);\n      } else {\n        authentication(data, () => {\n          setLoginOK({ ...loginOK\n          });\n          history.push(\"/creator\");\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: loginOK.email,\n        onChange: handleInputs(\"email\"),\n        id: \"mail\",\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Su Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: loginOK.password,\n        onChange: handleInputs(\"password\"),\n        id: \"password\",\n        htmlFor: \"password\",\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Su Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: loginSubmit,\n          color: \"primary\",\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserLogin, \"zDomvr2rHYgJ67AoV+PSEF+nglU=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/User/UserLogin.js"],"names":["Button","React","useState","authentication","myLogin","isAuth","useHistory","ToastContainer","toast","UserLogin","register","setRegister","login","setLogin","user","notify","error","registerHandler","loginHandler","loginOK","setLoginOK","email","password","history","console","log","handleInputs","name","event","target","value","loginSubmit","preventDefault","then","data","push"],"mappings":"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","sourcesContent":["import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { authentication, myLogin, isAuth } from '../../helpers';\nimport { useHistory } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const UserLogin = () => {\n    const [register, setRegister] = useState(true);\n    const [login, setLogin] = useState(true);\n    const { user } = isAuth();\n    const notify = (error) => toast(error);\n\n\n    const registerHandler = () => {\n        setRegister(!register)\n    }\n\n    const loginHandler = () => {\n        setLogin(false)\n    }\n\n    const [loginOK, setLoginOK] = useState({\n        email: \"\",\n        password: \"\",\n        error: \"\"\n    });\n\n\n    const history = useHistory();\n    console.log(user);\n    const handleInputs = (name) => event => {\n        setLoginOK({ ...loginOK, error: false, [name]: event.target.value })\n    }\n\n    const loginSubmit = (event) => {\n        event.preventDefault();\n\n        myLogin(loginOK)\n            .then(data => {\n                if (data.error) {\n                    setLoginOK({ ...loginOK, error: data.error })\n                    notify(data.error);\n\n                }\n                else {\n                    authentication(data, () => {\n                        setLoginOK({ ...loginOK })\n                        history.push(\"/creator\")\n                    })\n\n                }\n            })\n\n    }\n\n    return (\n        <>\n            <form className=\"loginForm\">\n                <label htmlFor=\"email\">Email</label>\n                <input value={loginOK.email} onChange={handleInputs(\"email\")} id=\"mail\" type=\"email\" name=\"email\" placeholder=\"Su Email\" />\n                <label htmlFor=\"password\">Password</label>\n                <input value={loginOK.password} onChange={handleInputs(\"password\")} id=\"password\" htmlFor=\"password\" type=\"password\" name=\"password\" placeholder=\"Su Password\" />\n                <div>\n                    <Button variant=\"contained\" onClick={loginSubmit} color=\"primary\">Iniciar Sesi√≥n</Button>\n                    <ToastContainer />\n                </div>\n            </form>\n        </>\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}