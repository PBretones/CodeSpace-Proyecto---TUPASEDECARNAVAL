{"ast":null,"code":"var _jsxFileName = \"/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/MusicPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { Song } from './Song';\nimport { Player } from './Player';\nimport { Library } from './Library';\nimport data from '../../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MusicPlayer = () => {\n  _s();\n\n  // we use Ref\n  const audioRef = useRef(null); // States\n  // State of song being played\n\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[1]);\n  const [isPlaying, setIsPlaying] = useState(false); //State of song time & duration\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      setSongInfo: setSongInfo,\n      songInfo: songInfo,\n      audioRef: audioRef,\n      setIsPlaying: setIsPlaying,\n      isPlaying: isPlaying,\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      setSongs: setSongs,\n      isPlaying: isPlaying,\n      audioRef: audioRef,\n      songs: songs,\n      setCurrentSong: setCurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onLoadedMetadata: timeUpdateHandler,\n      onTimeUpdate: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MusicPlayer, \"FvP5zGuzmJDVail55PoyaJcBJBQ=\");\n\n_c = MusicPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/MusicPlayer.js"],"names":["React","useState","useRef","Song","Player","Library","data","MusicPlayer","audioRef","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","currentTime","duration","timeUpdateHandler","e","current","target","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAE7B;AACA,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB,CAH6B,CAI7B;AACA;;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACK,IAAI,EAAL,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAA9C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C,CAR6B,CAU7B;;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AACrCgB,IAAAA,WAAW,EAAE,CADwB;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAxC;;AAMA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASL,WAAzB;AACA,UAAMC,QAAQ,GAAGE,CAAC,CAACE,MAAF,CAASJ,QAA1B;AACAF,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,WAAW,EAAEI,OAA5B;AAAqCH,MAAAA;AAArC,KAAD,CAAX;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEK,WAArB;AAAkC,MAAA,QAAQ,EAAED,QAA5C;AAAsD,MAAA,QAAQ,EAAEP,QAAhE;AAA0E,MAAA,YAAY,EAAEM,YAAxF;AAAsG,MAAA,SAAS,EAAED,SAAjH;AAA4H,MAAA,WAAW,EAAEF;AAAzI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAED,QAAnB;AAA6B,MAAA,SAAS,EAAEG,SAAxC;AAAmD,MAAA,QAAQ,EAAEL,QAA7D;AAAuE,MAAA,KAAK,EAAEC,KAA9E;AAAqF,MAAA,cAAc,EAAEG;AAArG;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,MAAA,gBAAgB,EAAEO,iBAAzB;AAA4C,MAAA,YAAY,EAAEA,iBAA1D;AAA6E,MAAA,GAAG,EAAEX,QAAlF;AAA4F,MAAA,GAAG,EAAEG,WAAW,CAACY;AAA7G;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA/BM;;GAAMhB,W;;KAAAA,W","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Song } from './Song';\nimport { Player } from './Player';\nimport { Library } from './Library';\n\nimport data from '../../util';\n\n\nexport const MusicPlayer = () => {\n\n    // we use Ref\n    const audioRef = useRef(null);\n    // States\n    // State of song being played\n    const [songs, setSongs] = useState(data());\n    const [currentSong, setCurrentSong] = useState(songs[1]);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    //State of song time & duration\n    const [songInfo, setSongInfo] = useState({\n        currentTime: 0,\n        duration: 0,\n    });\n\n\n    const timeUpdateHandler = (e) => {\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n        setSongInfo({ ...songInfo, currentTime: current, duration })\n    };\n\n    return (\n        <div className=\"\">\n            <Song currentSong={currentSong} />\n            <Player setSongInfo={setSongInfo} songInfo={songInfo} audioRef={audioRef} setIsPlaying={setIsPlaying} isPlaying={isPlaying} currentSong={currentSong} />\n            <Library setSongs={setSongs} isPlaying={isPlaying} audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong} />\n            <audio onLoadedMetadata={timeUpdateHandler} onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}