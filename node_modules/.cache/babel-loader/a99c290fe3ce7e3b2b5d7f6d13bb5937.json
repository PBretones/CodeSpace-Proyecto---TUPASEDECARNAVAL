{"ast":null,"code":"var _jsxFileName = \"/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/Player.js\";\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faAngleLeft, faAngleRight, faStopCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Player = ({\n  audioRef,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong\n}) => {\n  // Format Time\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }; //Event Handlers\n\n\n  const playSongHandler = () => {\n    audioRef.current.play();\n\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = flow => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (flow === 'skip-forward') {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n\n    if (flow === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]);\n        return;\n      }\n\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeControl\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: dragHandler,\n        min: 0,\n        max: songInfo.duration,\n        value: songInfo.currentTime,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration || 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playControl\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-back'),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"3x\",\n        icon: isPlaying ? faStopCircle : faPlayCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-forward'),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/MusicPlayer/Player.js"],"names":["React","useState","FontAwesomeIcon","faPlayCircle","faAngleLeft","faAngleRight","faStopCircle","Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","getTime","time","Math","floor","slice","playSongHandler","current","play","pause","dragHandler","e","currentTime","target","value","skipTrackHandler","flow","currentIndex","findIndex","song","id","length","duration"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faAngleLeft, faAngleRight, faStopCircle } from '@fortawesome/free-solid-svg-icons';\n\nexport const Player = ({\n    audioRef, currentSong, isPlaying, setIsPlaying,\n    setSongInfo, songInfo, songs, setCurrentSong }) => {\n\n\n    // Format Time\n\n    const getTime = (time) => {\n        return (\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        )\n    }\n\n\n    //Event Handlers\n    const playSongHandler = () => {\n        audioRef.current.play();\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    }\n\n\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\n    }\n\n\n    const skipTrackHandler = (flow) => {\n\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if (flow === 'skip-forward') {\n            setCurrentSong(songs[(currentIndex + 1) % songs.length])\n        }\n        if (flow === 'skip-back') {\n            if ((currentIndex - 1) % songs.length === -1) {\n                setCurrentSong(songs[songs.length - 1]);\n                return;\n            }\n            setCurrentSong(songs[(currentIndex - 1) % songs.length])\n        }\n    }\n\n    return (\n        <div className=\"player\">\n            <div className=\"timeControl\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input onChange={dragHandler} min={0} max={songInfo.duration} value={songInfo.currentTime} type=\"range\" />\n                <p>{getTime(songInfo.duration || 0)}</p>\n            </div>\n            <div className=\"playControl\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"3x\" icon={isPlaying ? faStopCircle : faPlayCircle} />\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n            </div>\n\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}