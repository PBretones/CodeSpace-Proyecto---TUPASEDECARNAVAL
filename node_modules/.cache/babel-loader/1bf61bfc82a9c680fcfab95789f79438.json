{"ast":null,"code":"export const authentication = (data, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\nexport const isAuth = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\nexport const myLogin = user => {\n  return fetch(\"http://localhost:3002/api/login\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const mySignUp = user => {\n  return fetch(\"http://localhost:3002/api/signup\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(error => {\n    console.log(error);\n  });\n}; // Fetch user\n\nexport const getUser = (userId, token) => {\n  return fetch(`http://localhost:3002/api/user/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => {\n    console.log(error);\n  });\n}; //Fetch customPases\n\nexport const getTipo = () => {\n  return fetch(`http://localhost:3002/api/tipo/show`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(error => {\n    console.log(error);\n  });\n}; //add audio to the local storage\n\nexport const addAudio = audio => {\n  let audios = [];\n\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"audios\")) {\n      audios = JSON.parse(localStorage.getItem(\"audios\"));\n    }\n\n    audios.push({ ...audio\n    });\n    audios = Array.from(new Set(audios.map(p => p._id))).map(id => {\n      return audios.find(p => p._id === id);\n    });\n    localStorage.setItem(\"audios\", JSON.stringify(audios));\n  }\n}; //delete audios \n\nexport const deleteAudio = audiosId => {\n  let audios = [];\n\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"audios\")) {\n      audios = JSON.parse(localStorage.getItem(\"audios\"));\n    }\n\n    audios.map((audio, index) => {\n      if (audio._id === audiosId) {\n        audios.splice(index, 1);\n      }\n    });\n    localStorage.setItem(\"audios\", JSON.stringify(audios));\n  }\n\n  return audios;\n}; //get chosen audios from local storage\n\nexport const getAudios = customPase => {\n  const newPase = JSON.stringify(customPase);\n  localStorage.setItem(\"audios\", newPase);\n  console.log(newPase);\n  console.log(localStorage.getItem(\"audios\"));\n  return newPase;\n};\nexport const postPase = (userId, postData, token) => {\n  return fetch(`http://localhost:3002/api/customPase/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      custompase: postData\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/helpers.js"],"names":["authentication","data","next","window","localStorage","setItem","JSON","stringify","isAuth","getItem","parse","myLogin","user","fetch","method","headers","Accept","body","then","response","json","catch","error","console","log","mySignUp","getUser","userId","token","Authorization","getTipo","addAudio","audio","audios","push","Array","from","Set","map","p","_id","id","find","deleteAudio","audiosId","index","splice","getAudios","customPase","newPase","postPase","postData","custompase"],"mappings":"AAEA,OAAO,MAAMA,cAAc,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC1C,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA5B;AACAC,IAAAA,IAAI;AACP;AACJ,CALM;AAOP,OAAO,MAAMM,MAAM,GAAG,MAAM;AACxB,MAAI,OAAOL,MAAP,IAAiB,WAArB,EAAkC;AAC9B,WAAO,KAAP;AACH;;AACD,MAAIC,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC7B,WAAOH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAX,CAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ,CATM;AAWP,OAAO,MAAME,OAAO,GAAIC,IAAD,IAAU;AAC7B,SACIC,KAAK,CAAC,iCAAD,EAAoC;AACrCC,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAF4B;AAMrCC,IAAAA,IAAI,EAAEX,IAAI,CAACC,SAAL,CAAeK,IAAf;AAN+B,GAApC,CAAL,CASKM,IATL,CASWC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXL,EAYKC,KAZL,CAYYC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdL,CADJ;AAiBH,CAlBM;AAmBP,OAAO,MAAMG,QAAQ,GAAIb,IAAD,IAAU;AAC9B,SACIC,KAAK,CAAC,kCAAD,EAAqC;AACtCC,IAAAA,MAAM,EAAE,MAD8B;AAEtCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAF6B;AAMtCC,IAAAA,IAAI,EAAEX,IAAI,CAACC,SAAL,CAAeK,IAAf;AANgC,GAArC,CAAL,CASKM,IATL,CASWC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXL,EAYKC,KAZL,CAYYC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdL,CADJ;AAiBH,CAlBM,C,CAsBP;;AACA,OAAO,MAAMI,OAAO,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACtC,SAAOf,KAAK,CAAE,kCAAiCc,MAAO,EAA1C,EAA6C;AACrDb,IAAAA,MAAM,EAAE,KAD6C;AAErDC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLa,MAAAA,aAAa,EAAG,UAASD,KAAM;AAH1B;AAF4C,GAA7C,CAAL,CAQFV,IARE,CAQIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWKC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAbE,CAAP;AAcH,CAfM,C,CAiBP;;AACA,OAAO,MAAMQ,OAAO,GAAG,MAAM;AACzB,SAAOjB,KAAK,CAAE,qCAAF,EAAwC;AAChDC,IAAAA,MAAM,EAAE;AADwC,GAAxC,CAAL,CAGFI,IAHE,CAGIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,EAMFC,KANE,CAMKC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GARE,CAAP;AASH,CAVM,C,CAYP;;AACA,OAAO,MAAMS,QAAQ,GAAIC,KAAD,IAAW;AAC/B,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAI,OAAO9B,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,QAAIC,YAAY,CAACK,OAAb,CAAqB,QAArB,CAAJ,EAAoC;AAChCwB,MAAAA,MAAM,GAAG3B,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,QAArB,CAAX,CAAT;AACH;;AACDwB,IAAAA,MAAM,CAACC,IAAP,CAAY,EACR,GAAGF;AADK,KAAZ;AAKAC,IAAAA,MAAM,GAAGE,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQJ,MAAM,CAACK,GAAP,CAAYC,CAAD,IAAOA,CAAC,CAACC,GAApB,CAAR,CAAX,EAA8CF,GAA9C,CAAmDG,EAAD,IAAQ;AAC/D,aAAOR,MAAM,CAACS,IAAP,CAAaH,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUC,EAA7B,CAAP;AACH,KAFQ,CAAT;AAIArC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAe0B,MAAf,CAA/B;AACH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMU,WAAW,GAAIC,QAAD,IAAc;AACrC,MAAIX,MAAM,GAAG,EAAb;;AACA,MAAI,OAAO9B,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,QAAIC,YAAY,CAACK,OAAb,CAAqB,QAArB,CAAJ,EAAoC;AAChCwB,MAAAA,MAAM,GAAG3B,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,QAArB,CAAX,CAAT;AACH;;AAEDwB,IAAAA,MAAM,CAACK,GAAP,CAAW,CAACN,KAAD,EAAQa,KAAR,KAAkB;AACzB,UAAIb,KAAK,CAACQ,GAAN,KAAcI,QAAlB,EAA4B;AACxBX,QAAAA,MAAM,CAACa,MAAP,CAAcD,KAAd,EAAqB,CAArB;AACH;AACJ,KAJD;AAMAzC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAe0B,MAAf,CAA/B;AACH;;AACD,SAAOA,MAAP;AACH,CAhBM,C,CAkBP;;AACA,OAAO,MAAMc,SAAS,GAAIC,UAAD,IAAgB;AAErC,QAAMC,OAAO,GAAG3C,IAAI,CAACC,SAAL,CAAeyC,UAAf,CAAhB;AAEA5C,EAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+B4C,OAA/B;AAEA1B,EAAAA,OAAO,CAACC,GAAR,CAAYyB,OAAZ;AACA1B,EAAAA,OAAO,CAACC,GAAR,CAAYpB,YAAY,CAACK,OAAb,CAAqB,QAArB,CAAZ;AACA,SAAOwC,OAAP;AACH,CATM;AAWP,OAAO,MAAMC,QAAQ,GAAG,CAACvB,MAAD,EAASwB,QAAT,EAAmBvB,KAAnB,KAA6B;AACjD,SAAOf,KAAK,CAAE,wCAAuCc,MAAO,EAAhD,EAAmD;AAC3Db,IAAAA,MAAM,EAAE,MADmD;AAE3DC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLa,MAAAA,aAAa,EAAG,UAASD,KAAM;AAH1B,KAFkD;AAO3DX,IAAAA,IAAI,EAAEX,IAAI,CAACC,SAAL,CAAe;AAAE6C,MAAAA,UAAU,EAAED;AAAd,KAAf;AAPqD,GAAnD,CAAL,CASFjC,IATE,CASIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXE,EAYFC,KAZE,CAYKC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdE,CAAP;AAeH,CAhBM","sourcesContent":["\n\nexport const authentication = (data, next) => {\n    if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"jwt\", JSON.stringify(data));\n        next()\n    }\n}\n\nexport const isAuth = () => {\n    if (typeof window == \"undefined\") {\n        return false\n    }\n    if (localStorage.getItem(\"jwt\")) {\n        return JSON.parse(localStorage.getItem(\"jwt\"))\n    } else {\n        return false\n    }\n}\n\nexport const myLogin = (user) => {\n    return (\n        fetch(\"http://localhost:3002/api/login\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(user)\n\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    )\n}\nexport const mySignUp = (user) => {\n    return (\n        fetch(\"http://localhost:3002/api/signup\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(user)\n\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    )\n}\n\n\n\n// Fetch user\nexport const getUser = (userId, token) => {\n    return fetch(`http://localhost:3002/api/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then((response) => {\n            return response.json();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\n//Fetch customPases\nexport const getTipo = () => {\n    return fetch(`http://localhost:3002/api/tipo/show`, {\n        method: \"GET\",\n    })\n        .then((response) => {\n            return response.json();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\n//add audio to the local storage\nexport const addAudio = (audio) => {\n    let audios = [];\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"audios\")) {\n            audios = JSON.parse(localStorage.getItem(\"audios\"));\n        }\n        audios.push({\n            ...audio\n\n        });\n\n        audios = Array.from(new Set(audios.map((p) => p._id))).map((id) => {\n            return audios.find((p) => p._id === id);\n        });\n\n        localStorage.setItem(\"audios\", JSON.stringify(audios));\n    }\n};\n\n//delete audios \nexport const deleteAudio = (audiosId) => {\n    let audios = [];\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"audios\")) {\n            audios = JSON.parse(localStorage.getItem(\"audios\"));\n        }\n\n        audios.map((audio, index) => {\n            if (audio._id === audiosId) {\n                audios.splice(index, 1);\n            }\n        });\n\n        localStorage.setItem(\"audios\", JSON.stringify(audios));\n    }\n    return audios;\n};\n\n//get chosen audios from local storage\nexport const getAudios = (customPase) => {\n\n    const newPase = JSON.stringify(customPase);\n\n    localStorage.setItem(\"audios\", newPase);\n\n    console.log(newPase);\n    console.log(localStorage.getItem(\"audios\"));\n    return newPase;\n};\n\nexport const postPase = (userId, postData, token) => {\n    return fetch(`http://localhost:3002/api/customPase/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ custompase: postData })\n    })\n        .then((response) => {\n            return response.json();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n}\n"]},"metadata":{},"sourceType":"module"}