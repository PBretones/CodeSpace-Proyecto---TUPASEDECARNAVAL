{"ast":null,"code":"var _jsxFileName = \"/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/User/PlaylistTrack.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlaylistTrack = ({\n  pases,\n  userPlaylist\n}) => {\n  _s();\n\n  const [loadPase, setLoadPase] = useState(false);\n  const [checkTrack, setCheckTrack] = useState(2);\n\n  const ReaddTrack = pases => {\n    console.log(pases);\n\n    if (checkTrack === 2) {\n      const lastArray = JSON.parse(localStorage.getItem(\"audios\"));\n      console.log(lastArray);\n      const paseToArray = pases.audios;\n      console.log(paseToArray);\n      const newArray = [];\n      newArray.push([lastArray, paseToArray]);\n      console.log(newArray);\n      localStorage.setItem(\"audios\", JSON.stringify(newArray));\n      return newArray;\n    }\n\n    if (checkTrack === 1) {\n      console.log(\"ADIOS\");\n      const lastArray = pases.audios;\n      localStorage.setItem(\"audios\", JSON.stringify(lastArray));\n      return lastArray;\n    }\n  };\n\n  const RedeleteTrack = audiosId => {\n    userPlaylist.map((pases, index) => {\n      if (pases._id === audiosId) {\n        userPlaylist.splice(index, 1);\n      }\n    });\n    return userPlaylist;\n    /* const newPlaylist = JSON.stringify(userPlaylist);\n    localStorage.setItem(\"audios\", newPlaylist);\n    return JSON.stringify(userPlaylist); */\n  };\n\n  const togglePase = () => {\n    if (loadPase === true) {\n      RedeleteTrack(pases._id);\n      setLoadPase(false);\n    } else {\n      ReaddTrack(pases);\n      setLoadPase(true);\n      ;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customPase\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgBox\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pases.picture,\n          alt: pases.tipo,\n          className: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [pases.tipo, /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: pases.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoToggle\",\n          id: pases._id,\n          onClick: togglePase,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlaylistTrack, \"Jg4sj+kV1CWcdRF5snpnCm5AHfE=\");\n\n_c = PlaylistTrack;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistTrack\");","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/tpdc/proyectofinal/src/components/User/PlaylistTrack.js"],"names":["React","useState","PlaylistTrack","pases","userPlaylist","loadPase","setLoadPase","checkTrack","setCheckTrack","ReaddTrack","console","log","lastArray","JSON","parse","localStorage","getItem","paseToArray","audios","newArray","push","setItem","stringify","RedeleteTrack","audiosId","map","index","_id","splice","togglePase","picture","tipo","year"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nexport const PlaylistTrack = ({ pases, userPlaylist }) => {\n    const [loadPase, setLoadPase] = useState(false);\n    const [checkTrack, setCheckTrack] = useState(2);\n\n    const ReaddTrack = (pases) => {\n        console.log(pases);\n        if (checkTrack === 2) {\n            const lastArray = JSON.parse(localStorage.getItem(\"audios\"));\n            console.log(lastArray);\n            const paseToArray = pases.audios;\n            console.log(paseToArray);\n            const newArray = [];\n            newArray.push([lastArray, paseToArray])\n            console.log(newArray);\n\n            localStorage.setItem(\"audios\", JSON.stringify(newArray));\n            return newArray;\n        }\n        if (checkTrack === 1) {\n            console.log(\"ADIOS\");\n\n            const lastArray = pases.audios;\n            localStorage.setItem(\"audios\", JSON.stringify(lastArray))\n            return lastArray;\n        }\n\n    };\n    const RedeleteTrack = (audiosId) => {\n\n        userPlaylist.map((pases, index) => {\n            if (pases._id === audiosId) {\n                userPlaylist.splice(index, 1);\n            }\n        });\n        return userPlaylist;\n        /* const newPlaylist = JSON.stringify(userPlaylist);\n        localStorage.setItem(\"audios\", newPlaylist);\n        return JSON.stringify(userPlaylist); */\n\n    }\n\n    const togglePase = () => {\n        if (loadPase === true) {\n            RedeleteTrack(pases._id);\n            setLoadPase(false);\n\n        }\n        else {\n            ReaddTrack(pases);\n            setLoadPase(true);\n            ;\n        }\n\n    }\n    return (\n        <div className=\"customContainer\">\n            <div className=\"customPase\">\n                <div className=\"imgBox\">\n                    <img src={pases.picture} alt={pases.tipo} className=\"center\" />\n                </div>\n                <div className=\"infoBox\">\n                    <h4>{pases.tipo}\n                        <h4>{pases.year}</h4>\n                    </h4>\n                    <div className=\"infoToggle\" id={pases._id} onClick={togglePase}>\n                        <input type=\"checkbox\" name=\"\" />\n                    </div>\n                </div>\n            </div>\n        </div>)\n}"]},"metadata":{},"sourceType":"module"}