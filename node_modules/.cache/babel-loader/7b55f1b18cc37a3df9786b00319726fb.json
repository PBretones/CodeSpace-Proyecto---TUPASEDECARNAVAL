{"ast":null,"code":"var _jsxFileName = \"/home/pbretones/Documentos/PBretones/proyectofinalROTO/src/components/MusicPlayer/LibrarySong.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  currentSong,\n  audioRef,\n  isPlaying,\n  id,\n  setSongs\n}) => {\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n    const newSongs = songs.map(song => {\n      if (song._id === id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs); // is it playing?\n\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentSong ? /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: songSelectHandler,\n      className: `librarySong ${song.active ? 'selected' : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songDescription\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songImage\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.picture,\n            alt: \"portada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songInfo\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this) : \"\"\n  }, void 0, false);\n};\n_c = LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/home/pbretones/Documentos/PBretones/proyectofinalROTO/src/components/MusicPlayer/LibrarySong.js"],"names":["React","LibrarySong","song","songs","setCurrentSong","currentSong","audioRef","isPlaying","id","setSongs","songSelectHandler","newSongs","map","_id","active","current","play","picture","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA,WAA/B;AAA4CC,EAAAA,QAA5C;AAAsDC,EAAAA,SAAtD;AAAiEC,EAAAA,EAAjE;AAAqEC,EAAAA;AAArE,CAAD,KAAqF;AAE5G,QAAMC,iBAAiB,GAAG,YAAY;AAClC,UAAMN,cAAc,CAACF,IAAD,CAApB;AAGA,UAAMS,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAWV,IAAD,IAAU;AAEjC,UAAIA,IAAI,CAACW,GAAL,KAAaL,EAAjB,EAAqB;AAEjB,eAAO,EACH,GAAGN,IADA;AAEHY,UAAAA,MAAM,EAAE;AAFL,SAAP;AAIH,OAND,MAMO;AACH,eAAO,EACH,GAAGZ,IADA;AAEHY,UAAAA,MAAM,EAAE;AAFL,SAAP;AAIH;AAEJ,KAfgB,CAAjB;AAgBAL,IAAAA,QAAQ,CAACE,QAAD,CAAR,CApBkC,CAsBlC;;AACA,QAAIJ,SAAJ,EAAe;AAAED,MAAAA,QAAQ,CAACS,OAAT,CAAiBC,IAAjB;AAAyB;;AAAA;AAE7C,GAzBD;;AA2BA,sBACI;AAAA,cAAGX,WAAW,gBACV;AAAK,MAAA,OAAO,EAAEK,iBAAd;AAAiC,MAAA,SAAS,EAAG,eAAcR,IAAI,CAACY,MAAL,GAAc,UAAd,GAA2B,EAAG,EAAzF;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEZ,IAAI,CAACe,OAAf;AAAwB,YAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAA,sBAAKf,IAAI,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADU,GASD;AATb,mBADJ;AAcH,CA3CM;KAAMjB,W","sourcesContent":["import React from 'react';\n\n\nexport const LibrarySong = ({ song, songs, setCurrentSong, currentSong, audioRef, isPlaying, id, setSongs }) => {\n\n    const songSelectHandler = async () => {\n        await setCurrentSong(song);\n\n\n        const newSongs = songs.map((song) => {\n\n            if (song._id === id) {\n\n                return {\n                    ...song,\n                    active: true,\n                }\n            } else {\n                return {\n                    ...song,\n                    active: false\n                }\n            }\n\n        });\n        setSongs(newSongs);\n\n        // is it playing?\n        if (isPlaying) { audioRef.current.play() };\n\n    }\n\n    return (\n        <>{currentSong ?\n            <div onClick={songSelectHandler} className={`librarySong ${song.active ? 'selected' : \"\"}`} >\n                <div className=\"songDescription\">\n                    <div className=\"songImage\">\n                        <img src={song.picture} alt=\"portada\"></img></div>\n                    <div className=\"songInfo\">\n                        <h3>{song.name}</h3>\n                    </div>\n                </div>\n            </div> : \"\"\n        }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}